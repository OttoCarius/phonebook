{"version":3,"file":"static/js/421.0fcf3a22.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/ContactForm/ContactForm.styled.js","redux/selectors.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Pages/ContactPage/ContactPage.styled.js","components/Pages/ContactPage/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport bgImage from '../img/iphone2.png';\n\nconst Box = styled.div`\n  width: 420px;\n  min-height: 860px;\n\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffffff;\n\n  background: url(${bgImage});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media screen and (max-width: 420px) {\n    min-width: 300px;\n    min-height: 500px;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 2000px) {\n    width: 480px;\n  }\n`;\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const StyledCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const StyledInput = styled.input`\n  margin: 10px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-transform: ${p => p.theme.textTransform.cap};\n  width: 200px;\n  height: 30px;\n  border-radius: 20px;\n  box-shadow: 1px 9px 15px rgba(0, 0, 0, 0.5);\n  text-align: center;\n\n  ::placeholder {\n    text-align: center;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-transform: ${p => p.theme.textTransform.cap};\n  text-align: center;\n`;\n\nexport const StyledButton = styled.button`\n  margin: 10px;\n  color: black;\n  /* color: ${p => p.theme.colors.primaryText}; */\n  background-color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-transform: ${p => p.theme.textTransform.cap};\n  width: 140px;\n  height: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  letter-spacing: 2px;\n  font-weight: 500;\n  border-radius: 40px;\n  box-shadow: 1px 9px 15px rgba(0, 0, 0, 0.5);\n  transition: all 0.3s ease 0s;\n\n  :hover,\n  :focus {\n    background-color: #adadad;\n  }\n\n  @media screen and (max-width: 420px) {\n    width: 120px;\n    height: 40px;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getIsLoading = state => state.users.isLoading;\nexport const getError = state => state.users.error;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { StyledInput } from './ContactForm.styled';\nimport { StyledButton } from './ContactForm.styled';\nimport { StyledCont } from './ContactForm.styled';\nimport { StyledLabel } from './ContactForm.styled';\nimport { addContact } from '../../redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContacts } from '../../redux/selectors';\n\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${name} is already in contacts.`);\n    }\n    dispatch(addContact({ id: nanoid(), name, number }));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n\n    resetForm();\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <StyledCont>\n        <StyledLabel htmlFor=\"name\">\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </StyledLabel>\n        <StyledLabel>\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Enter phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </StyledLabel>\n        <StyledButton type=\"submit\" onClick={() => {}}>\n          Add contact\n        </StyledButton>\n      </StyledCont>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  /* margin-top: 30px; */\n  padding: 20px;\n  max-height: 200px;\n  min-width: 100px;\n  overflow: auto;\n\n  @media screen and (min-width: 200px) and (max-width: 420px) {\n    padding: 10px;\n    height: 170px;\n  }\n`;\n\nexport const StyledItem = styled.li`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledText = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-transform: ${p => p.theme.textTransform.cap};\n`;\n\nexport const StyledButton = styled.button`\n  color: black;\n  background-color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-transform: ${p => p.theme.textTransform.cap};\n  width: 60px;\n  height: 35px;\n  letter-spacing: 2px;\n  font-weight: 500;\n  border-radius: 40px;\n  box-shadow: 1px 9px 15px rgba(0, 0, 0, 0.5);\n  transition: all 0.3s ease 0s;\n\n  :hover,\n  :focus {\n    background-color: #adadad;\n  }\n`;\n","import { StyledList } from './ContactList.styled';\nimport { StyledText } from './ContactList.styled';\nimport { StyledItem } from './ContactList.styled';\nimport { StyledButton } from './ContactList.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\n// import { removeContact } from '../../redux/contactsSlice';\nimport { deleteContact } from '../../redux/operations';\n\nconst ContactList = () => {\n  const items = useSelector(state => state.contacts.items);\n  const nameFilter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const deleteContacts = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const FilterItems = () => {\n    return items.filter(item => item.name.toLowerCase().includes(nameFilter));\n  };\n\n  let contacts = nameFilter === '' ? items : FilterItems();\n\n  return (\n    <div>\n      <StyledList>\n        {contacts.length === 0 ? null : (\n          <>\n            {contacts.map(contact => {\n              return (\n                <StyledItem key={contact.id}>\n                  <StyledText>\n                    {contact.name} : {contact.number}\n                  </StyledText>\n                  <StyledButton\n                    onClick={() => {\n                      deleteContacts(contact.id);\n                    }}\n                  >\n                    Delete\n                  </StyledButton>\n                </StyledItem>\n              );\n            })}\n          </>\n        )}\n      </StyledList>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-transform: ${p => p.theme.textTransform.cap};\n  width: 332px;\n  height: 30px;\n  border-radius: 20px;\n  box-shadow: 1px 9px 15px rgba(0, 0, 0, 0.5);\n  text-align: center;\n  display: flex;\n  margin-bottom: 20px;\n\n  ::placeholder {\n    text-align: center;\n  }\n\n  @media screen and (min-width: 200px) and (max-width: 420px) {\n    width: 200px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import { StyledInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/contactsSlice';\nimport { getFilter } from '../../redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const onChange = e => {\n    e.preventDefault();\n    dispatch(changeFilter(e.currentTarget.value.toLocaleLowerCase()));\n  };\n  return (\n    <StyledInput\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Find contact by name\"\n    />\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-bottom: ${p => p.theme.space[4]}px;\n\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledTitle = styled.h1`\n  /* margin-bottom: 10px; */\n  color: ${p => p.theme.colors.primaryText};\n  /* background-color: ${p => p.theme.colors.white}; */\n  text-shadow: 0 1px #808d93, -1px 0 #cdd2d5, -1px 2px #808d93, -2px 1px #cdd2d5,\n    -2px 3px #808d93, -3px 2px #cdd2d5, -3px 4px #808d93, -4px 3px #cdd2d5,\n    -4px 5px #808d93, -5px 4px #cdd2d5, -5px 6px #808d93, -6px 5px #cdd2d5,\n    -6px 7px #808d93, -7px 6px #cdd2d5, -7px 8px #808d93, -8px 7px #cdd2d5;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  padding: ${p => p.theme.space[4]}px;\n  text-align: center;\n\n  @media screen and (min-width: 200px) and (max-width: 420px) {\n    padding: 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledSection } from './Section.styled';\nimport { StyledTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <StyledSection>\n    <StyledTitle>{title}</StyledTitle>\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport bgImg from '../../img/white.jpg';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  background: url(${bgImg});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 100%;\n\n  overflow-y: scroll;\n  max-height: calc(100vh - 56px - 62px);\n`;\n","import Box from '../../Box/Box';\nimport ContactForm from '../../ContactForm/ContactForm';\nimport ContactList from '../../ContactList/ContactList';\nimport Filter from '../../Filter/Filter';\nimport Section from '../../Section/Section';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../../redux/operations';\nimport { MainContainer } from './ContactPage.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <Box>\n        <Section title=\"PhoneBook\">\n          <ToastContainer />\n          <ContactForm />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </Box>\n    </MainContainer>\n  );\n}\n"],"names":["styled","bgImage","StyledCont","StyledInput","p","theme","fontSizes","m","fontWeights","medium","textTransform","cap","StyledLabel","StyledButton","colors","primaryText","white","s","getContacts","state","contacts","items","getFilter","filter","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","onSubmit","e","preventDefault","find","contact","toLowerCase","toast","addContact","htmlFor","type","placeholder","onChange","pattern","title","required","onClick","StyledList","StyledItem","StyledText","nameFilter","item","includes","length","map","contactId","deleteContact","changeFilter","toLocaleLowerCase","StyledSection","space","StyledTitle","semiBold","children","MainContainer","bgImg","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}