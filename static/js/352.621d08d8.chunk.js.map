{"version":3,"file":"static/js/352.621d08d8.chunk.js","mappings":"wNAoJA,UAlIiB,WAAO,IAAD,IACfA,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,aALNC,EADF,EACEA,SADF,IAEEC,UAAaC,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,QACrBC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAUF,OACE,SAAC,QAAD,CACEC,QAAS,CAAEC,MAAO,EAAGC,QAAS,GAC9BC,QAAS,CAAEF,MAAO,EAAGC,QAAS,GAC9BE,WAAY,CAAEC,SAAU,IAH1B,UAKE,UAAC,KAAD,CAAMC,SAAUR,GAXH,SAAAS,GACfjB,EAASkB,EAAAA,EAAAA,SAAwBD,IACjCR,GACD,IAQG,WACE,SAAC,KAAD,uCACA,UAAC,KAAD,mBAEE,SAAC,MAAD,QACEU,KAAK,QACDf,EAAS,OAAQ,CACnBgB,SAAU,mBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,iDAIf,SAAC,MAAD,CACEC,MAAO,CACLC,SAAU,WACVC,IAAK,OACLC,KAAM,MACNC,MAAO,SAETC,KAAM,SAGV,SAAC,KAAD,WACS,OAANvB,QAAM,IAANA,OAAA,EAAAA,EAAQwB,QAAQ,SAAC,KAAD,iBAAexB,QAAf,IAAeA,GAAf,UAAeA,EAAQwB,YAAvB,aAAe,EAAcP,aAEhD,UAAC,KAAD,oBAEE,SAAC,MAAD,QACEJ,KAAK,SACDf,EAAS,QAAS,CACpBgB,SAAU,oBACVW,QAAS,CACPT,MACE,uJACFC,QAAS,4DAIf,SAAC,MAAD,CACEC,MAAO,CACLC,SAAU,WACVC,IAAK,OACLC,KAAM,MACNC,MAAO,SAETC,KAAM,SAGV,SAAC,KAAD,WACS,OAANvB,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,SACP,SAAC,KAAD,iBAAe1B,QAAf,IAAeA,GAAf,UAAeA,EAAQ0B,aAAvB,aAAe,EAAeT,aAGlC,UAAC,KAAD,uBAEE,SAAC,MAAD,QACEJ,KAAK,YACDf,EAAS,WAAY,CACvBgB,SAAU,wKACVW,QAAS,CACPT,MACE,iEACFC,QAAS,SAIf,SAAC,MAAD,CACEC,MAAO,CACLC,SAAU,WACVC,IAAK,OACLC,KAAM,MACNC,MAAO,SAETC,KAAM,SAGV,SAAC,KAAD,WACS,OAANvB,QAAM,IAANA,OAAA,EAAAA,EAAQ2B,YACP,SAAC,KAAD,WACE,UAAC,KAAD,YACE,yDACA,yDACA,kEACA,mEACA,gFAKP1B,IACC,SAAC,KAAD,CACEY,KAAK,SACLe,GAAIC,EAAAA,EAAAA,OACJzB,QAAS,CAAEE,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,GAAKqB,MAAO,IALtC,gCAaT,C,6OChJYC,EAAQC,EAAAA,GAAAA,GAAH,oFAMLC,EAAOD,EAAAA,GAAAA,KAAH,oHAOJE,EAAQF,EAAAA,GAAAA,MAAH,gIAQLG,EAAQH,EAAAA,GAAAA,MAAH,+gBAuBLI,EAASJ,EAAAA,GAAAA,OAAH,urBA4BNK,EAAeL,EAAAA,GAAAA,IAAH,uGAOZM,EAAYN,EAAAA,GAAAA,GAAH,2D","sources":["components/Pages/RegisterPage/RegisterPage.js","components/Pages/RegisterPage/RegisterPage.styled.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport authOperations from '../../../redux/auth/authOperations';\nimport { useForm } from 'react-hook-form';\nimport { SiMonkeytie } from 'react-icons/si';\nimport { MdAlternateEmail } from 'react-icons/md';\nimport { FaUserAlt } from 'react-icons/fa';\n\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  ErrorMessage,\n  ListError,\n  Title,\n} from './RegisterPage.styled';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    formState: { errors, isValid },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = data => {\n    dispatch(authOperations.register(data));\n    reset();\n  };\n\n  return (\n    <motion.div\n      initial={{ scale: 0, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{ duration: 0.9 }}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Title>Hello, friend! Sign Up!</Title>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            {...register('name', {\n              required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Please enter correct name (min 3 letter)',\n              },\n            })}\n          />\n          <FaUserAlt\n            style={{\n              position: 'absolute',\n              top: '35px',\n              left: '8px',\n              color: 'white',\n            }}\n            size={25}\n          />\n        </Label>\n        <ErrorMessage>\n          {errors?.name && <ErrorMessage>{errors?.name?.message}</ErrorMessage>}\n        </ErrorMessage>\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            {...register('email', {\n              required: 'Email is required',\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: 'Please enter a valid email «example@mail.com»',\n              },\n            })}\n          />\n          <MdAlternateEmail\n            style={{\n              position: 'absolute',\n              top: '35px',\n              left: '8px',\n              color: 'white',\n            }}\n            size={25}\n          />\n        </Label>\n        <ErrorMessage>\n          {errors?.email && (\n            <ErrorMessage>{errors?.email?.message}</ErrorMessage>\n          )}\n        </ErrorMessage>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            {...register('password', {\n              required: 'Поле обязательное к заполнению',\n              pattern: {\n                value:\n                  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{6,15}$/,\n                message: '',\n              },\n            })}\n          />\n          <SiMonkeytie\n            style={{\n              position: 'absolute',\n              top: '35px',\n              left: '8px',\n              color: 'white',\n            }}\n            size={25}\n          />\n        </Label>\n        <ErrorMessage>\n          {errors?.password && (\n            <ErrorMessage>\n              <ListError>\n                <li>At least 6 characters long.</li>\n                <li>Contains at least 1 number.</li>\n                <li>Containsat least 1 lowercase letter.</li>\n                <li>Contains at least 1 uppercase letter.</li>\n                <li>Contains a special character(!@#$%^&* _= +-)</li>\n              </ListError>\n            </ErrorMessage>\n          )}\n        </ErrorMessage>\n        {isValid && (\n          <Button\n            type=\"submit\"\n            as={motion.button}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.9, delay: 0.1 }}\n          >\n            Create Account\n          </Button>\n        )}\n      </Form>\n    </motion.div>\n  );\n};\n\nexport default Register;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-top: 50px;\n  text-align: center;\n  color: #fff;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 9px;\n  position: relative;\n  color: #fff;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 295px;\n  margin-top: 5px;\n  padding: 0.375rem 38px;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #fff;\n  background-color: #424242;\n  border: 2px solid #fff;\n  appearance: none;\n  border-radius: 15px;\n  box-shadow: 0 0 5px 2px rgba(148, 148, 148, 0.5);\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  &:focus {\n    color: #fff;\n    background-color: #616161;\n    border-color: #fff;\n    outline: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  margin-top: 20px;\n  width: 200px;\n  padding: 5px 5px;\n  font-weight: 400;\n  line-height: 1.5;\n  text-transform: uppercase;\n  cursor: pointer;\n  color: #fff;\n  background-color: #262525;\n\n  border-radius: 20px;\n  box-shadow: 0 0 5px 2px rgba(148, 148, 148, 0.5);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  border: 2px solid #fff;\n  &:hover {\n    background-color: #424242;\n  }\n  &:active {\n    color: #fff;\n    background-color: #1a1e21;\n    border-color: #191c1f;\n    box-shadow: 0 0 0 0.25rem rgb(66 70 73 / 50%);\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  color: #fff;\n  font-size: 10px;\n  margin-top: 4px;\n  text-align: center;\n`;\n\nexport const ListError = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\n"],"names":["dispatch","useDispatch","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","initial","scale","opacity","animate","transition","duration","onSubmit","data","authOperations","type","required","minLength","value","message","style","position","top","left","color","size","name","pattern","email","password","as","motion","delay","Title","styled","Form","Label","Input","Button","ErrorMessage","ListError"],"sourceRoot":""}